#!/bin/bash
#t-out.sh


function vremya () {
        TIME=15
             echo "Введите данные сторон треугольника" >&2
        read -t $TIME a b c 
     
        if [ -z "$a" ] || [ -z "$b" ] || [ -z "$c" ]; then
	     echo "Время ожидания истекло или не задана одна из сторон" >&2
        exit
        fi
}
	
function triangle () {
        local a="$1" b="$2" c="$3"
 
	if ! [ -z "$(echo "$a" | grep ' ')" ] || ! [ -z "$(echo "$c" | grep ' ')" ] || ! [ -z "$(echo "$b" | grep ' ')" ]; then
	   echo "Необходимо вводить три числа" >&2	#Проверка на ввод трех сторон
	exit   
        elif ! [ -z $(echo "$a" | tr -d '-' | sed s/[0-9]//g) ] || ! [ -z $(echo "$b" | tr -d '-' | sed s/[0-9]//g) ] || ! [ -z $(echo "$c" | tr -d '-' | sed s/[0-9]//g) ]; then	         
	   echo "Неверные данные. Нужно вводить числа" >&2 #проверка на ввод именно чисел, а не символов. SED заменяет цифры на пустоту, если значение не пустое, значит введены символы. TR пропускает "-" для следующего условия 
	exit   
        elif [[ $(echo "$a <= 0" | bc) -eq 1 || $(echo "$b <= 0" | bc) -eq 1 || $(echo "$c <= 0" | bc) -eq 1 ]]; then
	    echo "Стороны треугольника не могут быть меньше или равны 0"  >&2
	exit   
        elif ! [[ $(echo "$a + $b > $c" | bc) -eq 1 && $(echo "$b + $c > $a" | bc) -eq 1 && $(echo "$a + $c > $b" | bc) -eq 1 ]]; then	
            echo "Такого треугольника не существует" >&2
        exit
        fi
}

	
function math_test () { 		#Виды треугольников
        local a="$1" b="$2" c="$3"
	if [ $(echo $a == $b | bc) -eq 1 ] && [ $(echo $b == $c | bc) -eq 1 ]; then 
      	    echo "Равносторонний треугольник"
        elif [ $(echo $a != $b | bc) -eq 1 ] && [ $(echo $b != $c | bc) -eq 1 ] && [ $(echo $a != $c | bc) -eq 1 ]; then
           echo "Обычный треугольник"
        else echo "Равнобедренный треугольник"
        fi
}

    
function run_test () {
	set -x -e
     [ "$(math_test 5 5 5)" = "Равносторонний треугольник" ]
     [ "$(math_test 4 4 5)" = "Равнобедренный треугольник" ]
     [ "$(math_test 4 5 4)" = "Равнобедренный треугольник" ]
     [ "$(math_test 5 4 4)" = "Равнобедренный треугольник" ]
     [ "$(triangle 1 10 20)" = "Такого треугольника не существует" ]
     [ "$(triangle 20 1 10)" = "Такого треугольника не существует" ]
     [ "$(triangle 10 1 20)" = "Такого треугольника не существует" ]
     [ "$(triangle 0 1 3)" = "Стороны треугольника не могут быть меньше или равны 0" ]
     [ "$(triangle -5 9 10)" = "Стороны треугольника не могут быть меньше или равны 0" ]
     [ "$(triangle 8 -3 9)" = "Стороны треугольника не могут быть меньше или равны 0" ]
     [ "$(triangle 45 39 -25)" = "Стороны треугольника не могут быть меньше или равны 0" ]
     [ "$(math_test 9 8 6)" = "Обычный треугольник" ]
     [ "$(math_test 6 8 9)" = "Обычный треугольник" ]
     [ "$(math_test 9 6 8)" = "Обычный треугольник" ]
     [ "$(math_test 8 9 6)" = "Обычный треугольник" ]
     [ "$(triangle / 8 9)" = "Неверные данные. Нужно вводить числа" ]
     [ "$(triangle 9 б 9)" = "Неверные данные. Нужно вводить числа" ]
     [ "$(triangle 10 5 @)" = "Неверные данные. Нужно вводить числа" ]
     [ "$(math_test 9223372036854775807 9223372036854775807 9223372036854775807)" = "Равносторонний треугольник" ]
     [ "$(math_test 9223372036854775807 9223372036854775807 9999999999999999)" = "Равнобедренный треугольник" ]
     [ "$(math_test 9999999999999999 9223372036854775807 9223372036854775807)" = "Равнобедренный треугольник" ]
     [ "$(math_test 9223372036854775807 9999999999999999  9223372036854775807)" = "Равнобедренный треугольник" ]
     [ "$(math_test 18446744073709551614 18446744073709551618 18446744073709551616)" = "Обычный треугольник" ]
     [ "$(triangle 1 2 '3 4')" = "Необходимо вводить три числа" ]
     [ "$(triangle 1 '3 4' 2)" = "Необходимо вводить три числа" ]
     [ "$(triangle '3 4' 1 2)" = "Необходимо вводить три числа" ] 
}

       if [ "$1" = "--test" ]; then
	   run_test
       else
	  vremya 
          triangle "$a" "$b" "$c"
	  math_test "$a" "$b" "$c" 
       fi
